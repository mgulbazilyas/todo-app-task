{
	"info": {
		"_postman_id": "0c8399cf-65c5-4879-bd84-461e9020e498",
		"name": "ToDo List API",
		"description": "API for a to-do list application built with Laravel",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15631321"
	},
	"item": [
		{
			"name": "Register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"mgulbazilyas+test2@gmail.com\",\n\t\"password\": \"password\",\n\t\"password_confirmation\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Set Auth Token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    if(jsonData.token){\r",
							"    pm.collectionVariables.set(\"Token\", jsonData.token.access_token);\r",
							"    }else{\r",
							"        pm.expect(false).to.be.true;\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Requested-With",
						"value": "XMLHttpRequest",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"mgulbazilyas+test@gmail.com\",\n\t\"password\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create ToDo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object Created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.not.be.null;\r",
							"    \r",
							"    pm.collectionVariables.set(\"todo_id\", jsonData.id);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{Token}}",
						"type": "text"
					},
					{
						"key": "X-Requested-With",
						"value": "XMLHttpRequest",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"Task {{$randomAlphaNumeric}}\",\n\t\"description\": \"{{$randomWords}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ToDo List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Last Created Item ID is found\", function () {\r",
							"    const todoID = pm.collectionVariables.get(\"todo_id\");\r",
							"    if (todoID) {\r",
							"        var jsonData = pm.response.json();\r",
							"        let c = false;\r",
							"        console.log(todoID);\r",
							"        jsonData.data.data.forEach((item) => {\r",
							"            if (item.id == todoID) {\r",
							"                c = true;\r",
							"\r",
							"            }\r",
							"            console.log(item)\r",
							"        })\r",
							"        pm.expect(c).to.eql(true);\r",
							"\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{Token}}",
						"type": "text"
					},
					{
						"key": "X-Requested-With",
						"value": "XMLHttpRequest",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "View ToDo",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{Token}}",
						"type": "text"
					},
					{
						"key": "X-Requested-With",
						"value": "XMLHttpRequest",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/todos/{{todo_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"todos",
						"{{todo_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update ToDo",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{Token}}",
						"type": "text"
					},
					{
						"key": "X-Requested-With",
						"value": "XMLHttpRequest",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"Updated Task\",\n\t\"description\": \"Updated {{$randomWords}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/todos/{{todo_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"todos",
						"{{todo_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete ToDo",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{Token}}",
						"type": "text"
					},
					{
						"key": "X-Requested-With",
						"value": "XMLHttpRequest",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/todos/{{todo_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"todos",
						"{{todo_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.upsert({key: 'Content-Type', value: 'application/json'});",
					"pm.request.headers.upsert({key: 'X-Requested-With', value: 'XMLHttpRequest'});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:8000"
		},
		{
			"key": "todo_id",
			"value": ""
		}
	]
}